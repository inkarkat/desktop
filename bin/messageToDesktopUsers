#!/bin/bash
shopt -qs extglob

readonly scriptDir="$([ "${BASH_SOURCE[0]}" ] && dirname -- "${BASH_SOURCE[0]}" || exit 3)"
[ -d "$scriptDir" ] || { echo >&2 'ERROR: Cannot determine script directory!'; exit 3; }
readonly projectDir="${scriptDir}/.."
readonly libDir="${projectDir}/lib/$(basename -- "${BASH_SOURCE[0]}")"
readonly notificationSoundFilespec="${libDir}/notification.wav"

printUsage()
{
    cat <<HELPTEXT
Show an information dialog to each user that is currently logged in on the
desktop, indicate this with a sound, and optionally speak the message, too.
HELPTEXT
    echo
    printf 'Usage: %q %s\n' "$(basename "$1")" '[-t|--title TITLE] [--timeout SECONDS] [-m|--message MESSAGE] [--speak [-v|--voice VOICE-NAME]] [-?|-h|--help]'
}

title=
message=
typeset -a zenityArgs=()
isSpeak=
typeset -a speakArgs=()
while [ $# -ne 0 ]
do
    case "$1" in
	--help|-h|-\?)	shift; printUsage "$0"; exit 0;;
	--title|-t)	zenityArgs+=("$1" "${2:?}"); shift; title="$1"; shift;;
	--timeout)	zenityArgs+=("$1" "${2:?}"); shift; shift;;
	--message|-m)	shift; zenityArgs+=(--text "${1:?}"); message="$1"; shift;;
	--speak)	shift; isSpeak=t;;
	--voice|-v)	shift; speakArgs+=(-v "${1:?}"); shift;;
	--)		shift; break;;
	-*)		{ echo "ERROR: Unknown option \"$1\"!"; echo; printUsage "$0"; } >&2; exit 2;;
	*)		break;;
    esac
done
if [ $# -ne 0 -o -z "$title" -o -z "$message" ]; then
    printUsage "$0" >&2
    exit 2
fi

addSoundCommand()
{
    local what="${1:?}"; shift
    local isAsync="${1?}"; shift
    if ! type -t "$1" >/dev/null; then
	printf >&2 'ERROR: Cannot %s: no %s command.\n' "$what" "$1"
	return 1
    fi

    printf -v quotedCommand '%q ' "$@"
    [ "$isAsync" ] \
	&& soundCommands+=(--command "{ ${quotedCommand% } &}") \
	|| soundCommands+=(--command "${quotedCommand% }")
}

addSoundCommand 'play notification sound' '' "$(command -v playsound)" "$notificationSoundFilespec"
[ ! "$isSpeak" ] \
    || addSoundCommand 'speak message' t "$(command -v speak)" "${speakArgs[@]}" "${title}: ${message}"

exec eachDesktopUserDo "${soundCommands[@]}" -- zenity --info "${zenityArgs[@]}"
